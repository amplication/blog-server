name: reusable-release-template

on:
  workflow_call:
    inputs:
      branch:
        type: string
        description: Name of the git branch
        required: true
      environment-name: 
        type: string
        description: Environment to package.
        required: true
      project-name:
        type: string
        description: Project (amplication application component) to deploy.
        required: true
        default: "website"
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ECR_AWS_ACCESS_KEY_ID:
        required: true
      ECR_AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  configure:
    name: configure deployment target component
    runs-on: ubuntu-20.04
    outputs:
      component: ${{ steps.component-identifier.outputs.component }}
    steps:
      - id: component-identifier
        run: |
          if [[ "${{ inputs.project-name }}" == "server" ]];
          then
            echo component="blog" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.project-name }}" == "admin-ui" ]];
          then
            echo component="blog-admin" >> $GITHUB_OUTPUT
          fi;

  package:
    name: package
    runs-on: ubuntu-20.04
    needs: configure
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: setup node
        uses: actions/setup-node@v3

      - name: install dependencies
        working-directory: ${{ inputs.project-name }}
        run: npm ci

      - name: configure aws credentials - operations account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: login container repository
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: "439403303254"

      - name: container image metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: "439403303254.dkr.ecr.us-east-1.amazonaws.com/${{ needs.configure.outputs.component }}"
          tags: |
            type=sha,prefix=sha-
            type=ref,event=pr,prefix=pr-
            type=ref,event=tag,prefix=tag-
            type=raw,value=${{ github.run_id }},prefix=gh-
            type=raw,value=${{ inputs.branch }}
            type=raw,value=${{ inputs.environment-name }}
            type=raw,value=latest,enable=${{ inputs.branch == 'master' }}

      - name: package admin-ui staging
        if: ${{ inputs.environment-name == 'staging' && inputs.project-name == 'admin-ui'}}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.project-name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            REACT_APP_SERVER_URL=https://blog-api.amplication-staging.com

      - name: package admin-ui production
        if: ${{ inputs.environment-name == 'production' && inputs.project-name == 'admin-ui'}}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.project-name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            REACT_APP_SERVER_URL=https://blog-api.amplication.com

      - name: package server production
        if: ${{ inputs.project-name == 'server' }}
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.project-name }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: deployment
    needs: [package, configure]
    uses: ./.github/workflows/deployment.template.yml
    with:
      environment-name: ${{ inputs.environment-name }}
      component-name: ${{ needs.configure.outputs.component }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
